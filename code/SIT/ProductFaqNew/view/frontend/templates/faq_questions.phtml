<?php
$cat_obj = $block->getFAQCategoryTree();
$faq_search_list = $block->getFAQSearchList();
$tree = $block->arrayTree($cat_obj->getData());
$tree1 = $block->generateTree($tree);
$helper = $this->helper('SIT\MainAdmin\Helper\Data');
$faq_list = $block->getFAQList();
$copy = $this->getViewFileUrl('SIT_ProductFaqNew::images/copy_url.png');
$copied = $this->getViewFileUrl('SIT_ProductFaqNew::images/copied_url.png');
?>
<div class="categories-faqs">
	<div class="faq-search-main">
		<div class="faq-search-right">
			<input type="text" name="faq-search" id="faq-search" placeholder="Search FAQ"/>
			<div class="faq-copy" title="Copy"><img class='copy-img' src='<?=$copy;?>' alt="Copy FAQ" width="25" height="25"></div>
		</div>
	</div>
	<div class="faq-que-ans-main">
		<div class="categories-list">
			<ul class="categories">
				<li class="single collapse" data-parentcategory="0" data-id="0"><div data-id="0" style="padding-left: 0%;"><a class="li-single-text" data-level="0"><?php echo __("All categories"); ?></a></div></li>
				<?=$tree1;?>
			</ul>
		</div>
		<div class="categories-content-main-questions">
			<h1 class="faqs-heading"><?php echo __("FAQs"); ?></h1>
			<?php echo $this->getLayout()->createBlock('SIT\ProductFaqNew\Block\ProductFaq\FaqQuestions')->setTemplate('SIT_ProductFaqNew::faq_question_other.phtml')->setData('faq_list', $faq_list)->toHtml(); ?>
		</div>
	</div>
</div>
<input type="hidden" name="faq-url" id="faq-url" value="<?php echo $this->getUrl('productfaqs/faqlist/index'); ?>">
<input type="hidden" name="faq-search-url" id="faq-search-url" value="<?php echo $this->getUrl('productfaqs/productfaq/faqsearch'); ?>">
<script type="text/javascript">
require(
[
    'jquery',
    'jquery/ui'

], function ($) {
        var availableTags = <?php print_r($faq_search_list);?>;

        $("#faq-search").autocomplete({
            source: availableTags,
            open: function() {
            	var width = $(this).innerWidth() - 4;
		        $("ul.ui-menu").width(width+'px');
		    },
		    focus: function( event, ui ) {
		    	var itemData = ui.item.label.split('ANS:')[0];
				$("#faq-search").val(itemData);
				$("#faq-search").attr("data-value",ui.item.value);
				return false;
			},
            select: function (event, ui) {
            	var itemData = ui.item.label.split('ANS:')[0];
            	$("#faq-search").val(itemData);
				$("#faq-search").attr("data-value",ui.item.value);
				if(ui.item.category == 'Products') {
					var params = {queid: null,quename: null,product_id: ui.item.value};
				} else {
					var params = {queid: ui.item.value,quename: null,product_id: null};
				}
            	$.ajax({
		          url: $("#faq-search-url").val(),
		          dataType: "json",
		          data: params,
		          success: function(data) {
		          	var copy_img = "<?php echo $copy; ?>";
		          	$('div.categories-content').html('');
		          	$('div.categories-content').html(data.output);
		          	$('.faq-copy').css('display','block');
		          	$('.faq-search-right').addClass('mob-faqcopy');
		          	$('.faq-copy').attr('title','Copy');
		          	$('.copy-img').attr('src',copy_img);

		          	if(ui.item.category == 'Products') {
		          		var new_url = $('#faq-url').val() + "product_id/" + ui.item.value;
		          	} else if(ui.item.category == 'Categories') {
		          		var new_url = $('#faq-url').val() + "category_id/" + ui.item.value;
		          		$('div.categories-list li div > a[data-id=' + ui.item.value + ']').trigger("click");
		          		$("div.categories-list li[data-id = '" + ui.item.value + "']").parents('ul.sub').css('display', 'block');
		                $("div.categories-list li[data-id = '" + ui.item.value + "']").parents('ul.sub').parent('li').find('span').toggleClass('sit-minus-icon').toggleClass('sit-plus-icon');
		                $("div.categories-list li[data-id = '" + ui.item.value + "']").find("div[data-id = '" + ui.item.value + "']").addClass('faq-active');
		                $("div.categories-list li[data-id = '" + ui.item.value + "']").find('div[data-id = ' + ui.item.value + '] span').addClass('sit-plus-minus-white-content');
		          	} else {
		          		var new_url = $('#faq-url').val() + "queid/" + ui.item.value;
		          	}
                    window.history.pushState(null, null, new_url);
		          }
		        });
		        return false;
            },
            /*create: function (ul, item) {
	            //access to jQuery Autocomplete widget differs depending
	            //on jQuery UI version - you can also try .data('autocomplete')
	           $(this).data('uiAutocomplete')._renderMenu = customRenderMenu;
	        },*/
        })
        .data("ui-autocomplete")._renderItem = function (ul, item) {
			if(item.category == 'Products') {
        		ul.append("<li class='ui-autocomplete-group pro-list'>" + item.category + "</li>");
			}
        	if(item.category == 'Categories') {
        		ul.append("<li class='ui-autocomplete-group cat-list'>" + item.category + "</li>");
			}
        	if(item.category == 'FAQs') {
        		ul.append("<li class='ui-autocomplete-group faq-list'>" + item.category + "</li>");
    		}
    		const htmlstring = `<li class="ui-menu-item" role="presentation"><a class="ui-corner-all" tabindex="-1"></a></li>`;
		    const $li = $(htmlstring);
		    const id = $(ul).find('li').length + 1;
		    const itemData = item.label.split('ANS:')[0];
		    $li.find('a').attr("data-id", item.value).attr("id", "ui-id-"+id).html(itemData);
		    $('li.ui-autocomplete-group.pro-list').css('display','none');
		    $('li.ui-autocomplete-group.pro-list').first().css('display','block');
		    $('li.ui-autocomplete-group.cat-list').css('display','none');
		    $('li.ui-autocomplete-group.cat-list').first().css('display','block');
		    $('li.ui-autocomplete-group.faq-list').css('display','none');
		    $('li.ui-autocomplete-group.faq-list').first().css('display','block');
		    return $li.appendTo(ul);
        };

        $("#faq-search").keydown(function(event,ui){
			if(event.keyCode == 13) {
				if($("#faq-search").val().length == 0) {
				  event.preventDefault();
				  return false;
				} else {
					$(".ui-autocomplete").hide();
					if(!$('.ui-autocomplete li.ui-menu-item a').hasClass('select')){
						$.ajax({
					      url: $("#faq-search-url").val(),
					      dataType: "json",
					      data: {queid: null,quename: $("#faq-search").val()},
					      showLoader: true,
					      success: function( data ) {
					      	$('div.categories-content').html('');
					      	$('div.categories-content').html(data.output);
					      	var new_url = $('#faq-url').val() + "quename/" + $("#faq-search").val();
					      	window.history.pushState(null, null, new_url);
					      }
					    });
					}
				}
			}
		});
        var keyCode = '';
		$("#faq-search").on("keyup", function(e) {
		  if(e.keyCode == 38 || e.keyCode == 40){
		    $('.ui-autocomplete li.ui-menu-item a').removeClass('select');
		    var sString = $(this).val();
		    var list = $('.ui-autocomplete li.ui-menu-item .ui-corner-all');
		    $(list).each(function (index, value) {
		      if (sString == $(this).text()) {
		        $(this).addClass('select');
		      }
		    });
		  }
		});
		/*Copy FAQ URL[START]*/
		var copied_img = "<?php echo $copied; ?>";
		var copy_img = "<?php echo $copy; ?>";
		$('.faq-copy').on('click', function() {
			var faq_cp = document.createElement('input'),
			faq_url = window.location.href;
			document.body.appendChild(faq_cp);
			faq_cp.value = faq_url;
			faq_cp.select();
			document.execCommand('copy');
			document.body.removeChild(faq_cp);
			$('.faq-copy').attr('title','Copied');
			$('.copy-img').attr('src',copied_img);
	    });
	    $('.li-child-text, .li-single-text').on('click', function() {
			/*$('.faq-copy').css('display','none');
			$('.faq-search-right').removeClass('mob-faqcopy');*/
	    	$('.copy-img').attr('src',copy_img);
	    	$('.faq-copy').attr('title','Copy');
	    });
	    $("body").on("click", ".faq_que a", function(event){
	    	if($('.faq_que a').prev('div').hasClass('faq_que_toggle_minus')) {
		    	$('.copy-img').attr('src',copy_img);
		    	$('.faq-copy').attr('title','Copy');
	    	}
	    });
	    /*Copy FAQ URL[END]*/
	});
</script>
<style type="text/css">
.ui-autocomplete .ui-menu-item a.select {
    background-color: #d1d1d1 !important;
}
.ui-autocomplete {
	display: block;
	float: left;
	list-style: none outside none;
	margin: 0;
	padding: 2px;
	font-family: Verdana, Arial, sans-serif;
	font-size: 15px;
	border: 1px solid black;
	color: #222222;
	background-color: #fff;
	-moz-border-radius: 4px 4px 4px 4px;
	cursor: default;
	position: absolute;
	height: 200px;
	overflow-y: auto;
}

.ui-autocomplete .ui-menu-item {
	clear: left;
	float: left;
	margin: 0;
	padding: 0;
	width: 100%;
}

.ui-autocomplete .ui-menu-item a {
	display: block;
	padding: 3px 3px 3px 3px;
	text-decoration: none;
	cursor: pointer;
	background-color: #fff;
}

.ui-autocomplete .ui-menu-item a:hover{
	display: block;
	padding: 3px 3px 3px 3px;
	text-decoration: none;
	color: #000;
	cursor: pointer;
	background-color: #d1d1d1;
}

.ui-autocomplete a {
	color: #222222;
}

.ui-helper-hidden-accessible {
	display: none !important;
}
.ui-widget-content .ui-state-hover, .ui-state-focus, .ui-widget-content .ui-state-focus
{
	background-color: #d1d1d1;
}

.ui-autocomplete-group {
    line-height: 30px;
    background-color: #541705;
    color: #ffffff;
}
.ui-menu-item {
    padding-left: 10px;
}
/*FAQ URL copy to clipboard[START]*/
.faq-copy {
    position: absolute;
    top: 0;
    right: -28px;
    cursor: pointer;
    /*display: none;*/
}
.faq-search-right {
	position: relative;
}

@media screen and (max-width: 480px) {
	.faq-search-right {
		width: 64%;
	}
	.faq_que_toggle_minus:before {
 	   margin-left: -4px;
	}
}
/*FAQ URL copy to clipboard[END]*/
</style>